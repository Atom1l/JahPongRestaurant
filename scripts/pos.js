// --- Global Variables ---
let cart = [];
let currentSelectedItem = null;
let currentTableId = null;
let currentTableNumber = null;
let selectedPaymentMethod = "Cash";
let isEditMode = false; // ‚≠êÔ∏è ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö "‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"

// ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
document.addEventListener("DOMContentLoaded", () => {
  
  // --- 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ User ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏°‡∏≤‡∏£‡∏∂‡∏¢‡∏±‡∏á ---
  auth.onAuthStateChanged((user) => {
    if (user) {
      console.log("User is logged in:", user.uid);
      fetchTables();
    } else {
      console.log("User is not logged in. Redirecting to login.");
      window.location.href = "login.html"; 
    }
  });

  // --- 2. ‚≠êÔ∏è (‡∏â‡∏ö‡∏±‡∏ö‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå) ‡∏î‡∏∂‡∏á‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö HTML ---
  const tableSelectionContainer = document.getElementById("table-selection-container");
  const menuContainer = document.getElementById("menu-container");
  const checkoutContainer = document.getElementById("checkout-container");
  const successContainer = document.getElementById("success-container");

  // (Table)
  const tableGridContainer = document.getElementById("table-grid-container");
  const selectButton = document.getElementById("select-table-button");
  const editTablesButton = document.getElementById("edit-tables-button"); // ‚≠êÔ∏è (‡∏õ‡∏∏‡πà‡∏° Edit)

  // (Menu)
  const menuGridContainer = document.getElementById("menu-grid-container");
  const cartCountEl = document.getElementById("cart-count");
  const cartIcon = document.getElementById("cart-icon");

  // (Checkout)
  const checkoutBackButton = document.getElementById("checkout-back-button");
  const checkoutList = document.getElementById("checkout-list");
  const summarySubtotal = document.getElementById("summary-subtotal");
  const summaryTotal = document.getElementById("summary-total");
  const confirmTotalPrice = document.getElementById("confirm-total-price");
  const confirmOrderButton = document.getElementById("confirm-order-button");
  const paymentOptions = document.querySelectorAll(".payment-option");

  // (Modal - ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏û‡∏¥‡πÄ‡∏®‡∏©)
  const itemModal = document.getElementById("item-modal");
  const modalCloseButton = document.getElementById("modal-close-button");
  const addToCartButton = document.getElementById("add-to-cart-button");
  const modalItemName = document.getElementById("modal-item-name");
  const modalItemImage = document.getElementById("modal-item-image");
  const modalNotes = document.getElementById("modal-notes");
  const modalItemPriceDisplay = document.getElementById("modal-item-price-display");
  const modalPriceOptions = document.getElementById("modal-price-options");
  const modalBtnNormal = document.getElementById("modal-btn-normal");
  const modalBtnSpecial = document.getElementById("modal-btn-special");
  

  // --- 3. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏ï‡πä‡∏∞ ---
  function fetchTables() {
    db.collection("tables").orderBy("number").onSnapshot(
      (querySnapshot) => {
        tableGridContainer.innerHTML = ""; 
        querySnapshot.forEach((doc) => {
          createTableElement(doc.id, doc.data());
        });
      }, (error) => {
        console.error("Error getting tables: ", error);
      }
    );
  }

  // --- 4. ‚≠êÔ∏è (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Bug!) ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÇ‡∏ï‡πä‡∏∞ 1 ‡∏ï‡∏±‡∏ß ‚≠êÔ∏è ---
  function createTableElement(docId, tableData) {
    const tableDiv = document.createElement("div");
    tableDiv.className = "table-item";
    tableDiv.dataset.id = docId;
    tableDiv.dataset.status = tableData.status;

    // ‚≠êÔ∏è (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) ‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‚≠êÔ∏è
    let iconUrl = (tableData.status === "Available") 
      ? "../images/table-available.png" // ‡∏£‡∏π‡∏õ‡πÇ‡∏ï‡πä‡∏∞‡∏ß‡πà‡∏≤‡∏á
      : "../images/table-available.png"; // üëà (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) ‡∏£‡∏π‡∏õ‡πÇ‡∏ï‡πä‡∏∞‡πÄ‡∏ï‡πá‡∏°

    tableDiv.innerHTML = `
      <img src="${iconUrl}" alt="‡πÇ‡∏ï‡πä‡∏∞">
      <div style="">‡πÇ‡∏ï‡πä‡∏∞‡∏ó‡∏µ‡πà ${tableData.number}</div>
      <input type="radio" name="table_selection" value="${docId}" style="display: none;">
    `;

    // 5. (‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï) ‡πÄ‡∏û‡∏¥‡πà‡∏° Event Listener ‡πÉ‡∏´‡πâ‡πÇ‡∏ï‡πä‡∏∞ (‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏•‡∏¥‡∏Å)
    tableDiv.addEventListener("click", () => {
      
      if (isEditMode) {
        // --- (‡πÉ‡∏´‡∏°‡πà!) ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô "‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç" ---
        handleTableEdit(docId, tableData);
      } else {
        // --- (‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°) ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô "‡πÇ‡∏´‡∏°‡∏î‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£" ---
        if (tableData.status === "Occupied") return; // ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÇ‡∏ï‡πä‡∏∞‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ

        document.querySelectorAll('.table-item.selected').forEach(el => {
          el.classList.remove('selected');
        });
        tableDiv.classList.add('selected');
        
        currentTableId = docId;
        currentTableNumber = tableData.number;
        console.log(`Selected table: ${currentTableNumber} (ID: ${currentTableId})`);
      }
    });
    tableGridContainer.appendChild(tableDiv);
  }


  // --- 6. ‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å" ‡πÇ‡∏ï‡πä‡∏∞ ---
  selectButton.addEventListener("click", () => {
    if (currentTableId) {
      tableSelectionContainer.style.display = "none";
      menuContainer.style.display = "block";

      cartIcon.style.display = "block";
      checkoutBackButton.style.display = "block";

      fetchMenuItems(); 
    } else {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏ï‡πä‡∏∞‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö");
    }
  });

  // --- 7. ‚≠êÔ∏è (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç!) ‡∏õ‡∏∏‡πà‡∏° "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÇ‡∏ï‡πä‡∏∞" (‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Text) ‚≠êÔ∏è ---
  editTablesButton.addEventListener("click", () => {
    isEditMode = !isEditMode; // ‡∏™‡∏•‡∏±‡∏ö‡πÇ‡∏´‡∏°‡∏î true/false
    editTablesButton.classList.toggle("active", isEditMode); // ‡∏™‡∏•‡∏±‡∏ö‡∏™‡∏µ‡∏õ‡∏∏‡πà‡∏°
    tableSelectionContainer.classList.toggle("edit-mode", isEditMode); // ‡∏™‡∏•‡∏±‡∏ö‡∏Ñ‡∏•‡∏≤‡∏™‡∏ó‡∏µ‡πà div ‡πÅ‡∏°‡πà

    if (isEditMode) {
      console.log("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏ï‡πä‡∏∞");
      editTablesButton.textContent = "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô"; // üëà (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç!)
      selectButton.style.display = 'none'; // ‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å"
      // ‡∏•‡πâ‡∏≤‡∏á‡πÇ‡∏ï‡πä‡∏∞‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡∏π‡πà (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
      document.querySelectorAll('.table-item.selected').forEach(el => {
        el.classList.remove('selected');
      });
      currentTableId = null;
      currentTableNumber = null;
    } else {
      console.log("‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏ï‡πä‡∏∞");
      editTablesButton.textContent = "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÇ‡∏ï‡πä‡∏∞"; // üëà (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç!)
      selectButton.style.display = 'block'; // ‡πÄ‡∏≠‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
    }
  });

  // --- 8. (‡πÉ‡∏´‡∏°‡πà!) ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏ï‡πä‡∏∞ ---
  function handleTableEdit(docId, tableData) {
    const newStatus = (tableData.status === "Available") ? "Occupied" : "Available";
    
    if (confirm(`‡πÇ‡∏ï‡πä‡∏∞‡∏ó‡∏µ‡πà ${tableData.number} (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${tableData.status})\n\n‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "${newStatus}" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`)) {
      db.collection("tables").doc(docId).update({
        status: newStatus
      }).catch(err => console.error("Error updating table status:", err));
    }
  }

  // --- (‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå) ---

  // --- 9. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ---
  function fetchMenuItems() {
    db.collection("menuItems").get()
      .then((querySnapshot) => {
        menuGridContainer.innerHTML = "";
        querySnapshot.forEach((doc) => {
          createMenuItemElement(doc.id, doc.data());
        });
      })
      .catch((error) => {
        console.error("Error getting menu items: ", error);
      });
  }

  // --- 10. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡πÄ‡∏°‡∏ô‡∏π 1 ‡∏ä‡∏¥‡πâ‡∏ô ---
  function createMenuItemElement(docId, itemData) {
    const itemDiv = document.createElement("div");
    itemDiv.className = "menu-item";
    itemDiv.dataset.id = docId;

    itemDiv.innerHTML = `
      <img src="${itemData.imageUrl || ''}" alt="${itemData.name}">
      <div class="menu-item-details">
        <h4>${itemData.name}</h4>
        <span class="price">‡∏ø ${itemData.price.toFixed(2)}</span>
      </div>
    `;
    itemDiv.addEventListener("click", () => {
      openItemModal(itemData, docId);
    });
    menuGridContainer.appendChild(itemDiv);
  }

  // --- 11. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î Modal (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏°‡∏µ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏û‡∏¥‡πÄ‡∏®‡∏©) ---
  function openItemModal(itemData, docId) {
    currentSelectedItem = { ...itemData, id: docId }; 
    modalItemName.textContent = itemData.name;
    modalItemImage.src = itemData.imageUrl || '';
    modalNotes.value = "";
    
    if (itemData.specialprice && itemData.specialprice > 0) {
      modalPriceOptions.style.display = "flex";
      modalItemPriceDisplay.style.display = "none";
      modalBtnNormal.textContent = `‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ ‡∏ø${itemData.price.toFixed(2)}`;
      modalBtnNormal.dataset.price = itemData.price;
      modalBtnNormal.dataset.name = "‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤";
      modalBtnSpecial.textContent = `‡∏û‡∏¥‡πÄ‡∏®‡∏© ‡∏ø${itemData.specialprice.toFixed(2)}`;
      modalBtnSpecial.dataset.price = itemData.specialprice;
      modalBtnSpecial.dataset.name = "‡∏û‡∏¥‡πÄ‡∏®‡∏©";
      modalBtnNormal.classList.add("selected");
      modalBtnSpecial.classList.remove("selected");
      currentSelectedItem.selectedPrice = itemData.price;
      currentSelectedItem.selectedPriceName = "‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤";
    } else {
      modalPriceOptions.style.display = "none";
      modalItemPriceDisplay.style.display = "block";
      modalItemPriceDisplay.textContent = `‡∏ø ${itemData.price.toFixed(2)}`;
      currentSelectedItem.selectedPrice = itemData.price;
      currentSelectedItem.selectedPriceName = "";
    }
    itemModal.style.display = "flex";
  }

  // --- 12. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î Modal ---
  function closeItemModal() {
    itemModal.style.display = "none";
    currentSelectedItem = null;
  }

  // --- 13. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏≠‡∏á‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏°‡∏µ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏û‡∏¥‡πÄ‡∏®‡∏©) ---
  function addItemToCart() {
    const notes = modalNotes.value;
    const priceName = currentSelectedItem.selectedPriceName 
      ? ` (${currentSelectedItem.selectedPriceName})` 
      : "";

    const cartItem = {
      id: currentSelectedItem.id,
      name: currentSelectedItem.name + priceName,
      price: currentSelectedItem.selectedPrice,
      notes: notes,
      qty: 1,
      imageUrl: currentSelectedItem.imageUrl || ''
    };
    
    cart.push(cartItem);
    console.log("Cart updated:", cart);
    updateCartCount();
    closeItemModal();
  }

  // --- 14. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏•‡∏Ç‡∏ö‡∏ô‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ---
  function updateCartCount() {
    cartCountEl.textContent = cart.length;
  }

  // --- 15. Event Listeners (‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô Modal) ---
  modalCloseButton.addEventListener("click", closeItemModal);
  addToCartButton.addEventListener("click", addItemToCart);

  // --- 16. Event Listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤ ---
  modalBtnNormal.addEventListener("click", () => {
    modalBtnNormal.classList.add("selected");
    modalBtnSpecial.classList.remove("selected");
    currentSelectedItem.selectedPrice = parseFloat(modalBtnNormal.dataset.price);
    currentSelectedItem.selectedPriceName = modalBtnNormal.dataset.name;
    console.log("Price selected:", currentSelectedItem.selectedPriceName);
  });

  modalBtnSpecial.addEventListener("click", () => {
    modalBtnSpecial.classList.add("selected");
    modalBtnNormal.classList.remove("selected");
    currentSelectedItem.selectedPrice = parseFloat(modalBtnSpecial.dataset.price);
    currentSelectedItem.selectedPriceName = modalBtnSpecial.dataset.name;
    console.log("Price selected:", currentSelectedItem.selectedPriceName);
  });


  // --- 17. Event Listeners (‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ üõí ‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö ‚ùÆ) ---
  cartIcon.addEventListener("click", () => {
    if (cart.length === 0) {
      alert("‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤");
      return;
    }
    menuContainer.style.display = "none";
    checkoutContainer.style.display = "block";

    cartIcon.style.display = "none"; // ‚≠êÔ∏è (‡πÄ‡∏û‡∏¥‡πà‡∏°!) ‡∏ã‡πà‡∏≠‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
    checkoutBackButton.style.display = "block"; // ‚≠êÔ∏è (‡πÄ‡∏û‡∏¥‡πà‡∏°!) ‡πÇ‡∏ä‡∏ß‡πå‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö

    renderCheckoutSummary();
  });

  // --- (‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î!) Logic ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö (‚ùÆ) ---
  checkoutBackButton.addEventListener("click", () => {

    // 1. ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤ "‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?
    if (checkoutContainer.style.display === "block") {
      // (‡πÉ‡∏ä‡πà) -> ‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ "‡πÄ‡∏°‡∏ô‡∏π"
      menuContainer.style.display = "block";
      checkoutContainer.style.display = "none";
      
      cartIcon.style.display = "block"; // ‡πÇ‡∏ä‡∏ß‡πå‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
      checkoutBackButton.style.display = "block"; // ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà
    
    } 
    // 2. ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå (‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤ "‡πÄ‡∏°‡∏ô‡∏π")
    else if (menuContainer.style.display === "block") {
      // (‡πÉ‡∏ä‡πà) -> ‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏ï‡πä‡∏∞"
      tableSelectionContainer.style.display = "block";
      menuContainer.style.display = "none";
      
      cartIcon.style.display = "none"; // ‡∏ã‡πà‡∏≠‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
      checkoutBackButton.style.display = "none"; // ‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
    }
  });

  // --- 18. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î (‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö) ---
  function renderCheckoutSummary() {
    checkoutList.innerHTML = "";
    let subtotal = 0;

    cart.forEach((item, index) => { // (‡πÄ‡∏û‡∏¥‡πà‡∏° index)
      const itemDiv = document.createElement("div");
      itemDiv.className = "checkout-item";
      const notesHTML = item.notes 
        ? `<div class="item-notes">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: ${item.notes}</div>` 
        : "";
      
      // (‡πÄ‡∏û‡∏¥‡πà‡∏° HTML ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö)
      itemDiv.innerHTML = `
        <button class="checkout-remove-btn" data-index="${index}"><img style="
        width:32px; height:32px;" src="../images/crosses.png" alt="Remove"/></button>
        
        <img src="${item.imageUrl || ''}" alt="${item.name}" class="checkout-item-image">
        
        <div class="item-info">
          <div class="item-name">${item.name} (x${item.qty})</div>
          ${notesHTML}
        </div>
        
        <div class="item-price">‡∏ø ${item.price.toFixed(2)}</div>
      `;
      checkoutList.appendChild(itemDiv);
      subtotal += (item.price * item.qty);
    });

    summarySubtotal.textContent = `‡∏ø ${subtotal.toFixed(2)}`;
    summaryTotal.textContent = `‡∏ø ${subtotal.toFixed(2)}`;
    confirmTotalPrice.textContent = `‡∏ø ${subtotal.toFixed(2)}`;

    // (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà) ‡πÄ‡∏û‡∏¥‡πà‡∏° Event Listeners ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö
    checkoutList.querySelectorAll('.checkout-remove-btn').forEach(button => {
      button.addEventListener('click', (e) => {
        const indexToRemove = parseInt(e.currentTarget.dataset.index, 10);
        removeItemFromCart(indexToRemove);
      });
    });
  }

  // --- 19. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô ---
  paymentOptions.forEach(button => {
    button.addEventListener("click", () => {
      paymentOptions.forEach(btn => btn.classList.remove("selected"));
      button.classList.add("selected");
      selectedPaymentMethod = button.dataset.payment;
      console.log("Payment method selected:", selectedPaymentMethod);
    });
  });

  // --- 20. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå (‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞) ---
  confirmOrderButton.addEventListener("click", () => {
    confirmOrderButton.disabled = true;
    confirmOrderButton.textContent = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...";

    const finalTotal = cart.reduce((sum, item) => sum + (item.price * item.qty), 0);
    
    const orderItems = cart.map(item => ({
        id: item.id,
        name: item.name,
        qty: item.qty,
        price: item.price,
        notes: item.notes,
        status: "Preparing"
    }));
    
    const orderObject = {
      tableId: currentTableId,
      tableNumber: currentTableNumber,
      items: orderItems,
      totalPrice: finalTotal,
      paymentMethod: selectedPaymentMethod,
      timestamp: firebase.firestore.FieldValue.serverTimestamp()
    };

    db.collection("orders").add(orderObject)
      .then((docRef) => {
        console.log("Order written with ID: ", docRef.id);
        return db.collection("tables").doc(currentTableId).update({
          status: "Occupied"
        });
      })
      .then(() => {
        showSuccessPage();
      })
      .catch((error) => {
        console.error("Error adding order: ", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
        confirmOrderButton.disabled = false;
        confirmOrderButton.innerHTML = `‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞ <span id="confirm-total-price">‡∏ø 0.00</span>`;
      });
  });

  // --- 21. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ---
  function showSuccessPage() {
    checkoutContainer.style.display = "none";
    successContainer.style.display = "block";

    checkoutBackButton.style.display = "none";

    // 22. ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á
    cart = [];
    currentTableId = null;
    currentTableNumber = null;
    currentSelectedItem = null;
    updateCartCount();
    confirmOrderButton.disabled = false;
    confirmOrderButton.innerHTML = `‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞ <span id="confirm-total-price">‡∏ø 0.00</span>`;

    setTimeout(() => {
      successContainer.style.display = "none";
      tableSelectionContainer.style.display = "block";
    }, 3000);
  }

  // --- 23. (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà!) ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏Ç‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ---
  function removeItemFromCart(index) {
    if (index > -1 && index < cart.length) {
      cart.splice(index, 1);
      console.log('Cart after removal:', cart);
      
      renderCheckoutSummary();
      updateCartCount();

      if (cart.length === 0) {
        menuContainer.style.display = "block";
        checkoutContainer.style.display = "none";

        // ‚≠êÔ∏è (‡πÄ‡∏û‡∏¥‡πà‡∏°!) ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÇ‡∏ä‡∏ß‡πå ‚≠êÔ∏è
        cartIcon.style.display = "block"; 
        
        // ‚≠êÔ∏è (‡πÄ‡∏û‡∏¥‡πà‡∏°!) ‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏Å‡πá‡∏¢‡∏±‡∏á‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏ä‡∏ß‡πå (‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π) ‚≠êÔ∏è
        checkoutBackButton.style.display = "block";
      }
    }
  }

}); // <-- ‡∏õ‡∏¥‡∏î‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö‡∏Ç‡∏≠‡∏á DOMContentLoaded (‡∏ï‡∏±‡∏ß‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢)